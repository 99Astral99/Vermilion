version: '3.4'

networks:
  backend:
   driver: bridge

services:
  vermilion.webapi:
    image: ${DOCKER_REGISTRY-}vermilionwebapi
    container_name: vermilion-api
    build:
      context: .
      dockerfile: Vermilion.WebApi/Dockerfile
    depends_on: 
    - vermilion-db
    networks:
    - backend

  vermilion-db:
   container_name: "vermilion-database"
   image: postgres:latest
   ports:
   - "5432:5432"
   environment:
    POSTGRES_DB: "vermilion-db"
    POSTGRES_USER: "postgres"
    POSTGRES_PASSWORD: "postgres"
    POSTGRES_HOST: "vermilionapi"
   volumes:
   - postgres-data:/var/lib/postgresql
   networks:
   - backend

  vermilion-cache:
     image: redis:latest
     container_name: vermilion-cache
     restart: always
     ports:
      - 6379:6379
     networks:
      - backend
  
  vermilion-mq:
     image: rabbitmq:3.11.7-management
     container_name: vermilion-mq
     hostname: vermilion-queue
     volumes:
        - ./.containers/queue/data/:/var/lib/rabbitmq/
        - ./.containers/queue/log/:/var/log/rabbitmq   
     ports:
      - "5672:5672"
      - "15672:15672"
     restart: always
     environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
     networks:
      - backend

volumes:
  postgres-data: {}
 